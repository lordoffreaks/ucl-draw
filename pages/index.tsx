import type { NextPage } from "next";
import Head from "next/head";
import { useState } from "react";
import { Team } from "../models";
import { LastSixteenPlugin } from "../plugins/draw/sixteen";
import styles from "../styles/Home.module.css";
import teams from "../teams/last-sixteen.json";
import { shuffle } from "../utils";

const Home: NextPage = () => {
  const [activeTeam, setActiveTeam] = useState<Team>();
  const [parings, setParings] = useState<[Team, Team | undefined][]>([]);
  const { findValidRivals } = LastSixteenPlugin();

  const filterOutParied = ({ name }: Team) => {
    if (!parings.length) {
      return true;
    }
    return !parings.find(([a, b]) => {
      return a.name === name || b?.name === name;
    });
  };

  const alreadyPaired = (teams as Team[]).filter(filterOutParied);
  const rivals = activeTeam
    ? findValidRivals(activeTeam, alreadyPaired)
    : alreadyPaired;

  const drawOne = () => {
    if (!activeTeam) {
      const ts = (teams as Team[])
        .filter(filterOutParied)
        .sort((a, b) => a.group.position - b.group.position);
      const team = shuffle(ts)[0];
      parings.push([team, undefined]);
      setParings(parings);
      setActiveTeam(team);
    } else {
      const rivals = findValidRivals(activeTeam, teams as Team[]).filter(
        filterOutParied
      );
      const team = shuffle(rivals)[0];
      const pidx = parings.findIndex(([a, _]) => {
        return a.name === activeTeam.name;
      });
      parings[pidx] = [activeTeam, team];
      setParings(parings);
      setActiveTeam(undefined);
    }
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <section className={styles.teamsWrapper}>
          <article>
            <h2>All teams</h2>
            <ul>
              {teams.map(({ name, country }) => (
                <li key={name}>
                  {name} | {country}
                </li>
              ))}
            </ul>
          </article>
          <article>
            <h2>{activeTeam ? "Possile rivals" : "Remaining teams"}</h2>

            <ul>
              {rivals.map(({ name, country }) => (
                <li key={name}>
                  {name} | {country}
                </li>
              ))}
            </ul>
          </article>
        </section>

        <ul>
          {parings.map(([a, b], index) => {
            return (
              <li key={index}>
                {a.name} - {b?.name}
              </li>
            );
          })}
        </ul>

        <button
          disabled={
            parings.reduce((acc, cur) => {
              return acc + cur.filter(Boolean).length;
            }, 0) === teams.length
          }
          onClick={drawOne}
        >
          Draw
        </button>
      </main>
    </div>
  );
};

export default Home;
