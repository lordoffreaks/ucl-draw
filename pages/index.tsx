import type { NextPage } from "next";
import Head from "next/head";
import { useState } from "react";
import { findValidRivals } from "../draw";
import { Team } from "../models";
import styles from "../styles/Home.module.css";
import teams from "../teams.json";

function shuffle<T>(data: T[]) {
  return data
    .map((value) => ({ value, sort: Math.random() }))
    .sort((a, b) => a.sort - b.sort)
    .map(({ value }) => value);
}

const Home: NextPage = () => {
  const [activeTeam, setActiveTeam] = useState<Team>();
  const [parings, setParings] = useState<[Team, Team | undefined][]>([]);

  const filterOutParied = ({ name }: Team) => {
    if (!parings.length) {
      return true;
    }
    return !parings.find(([a, b]) => {
      return a.name === name || b?.name === name;
    });
  };
  const drawOne = () => {
    if (!activeTeam) {
      const ts = (teams as Team[]).filter(filterOutParied);
      const team = shuffle(ts)[0];
      parings.push([team, undefined]);
      setParings(parings);
      setActiveTeam(team);
    } else {
      const rivals = findValidRivals(activeTeam, teams as Team[]).filter(
        filterOutParied
      );
      const team = shuffle(rivals)[0];
      const pidx = parings.findIndex(([a, _]) => {
        return a.name === activeTeam.name;
      });
      parings[pidx] = [activeTeam, team];
      setParings(parings);
      setActiveTeam(undefined);
    }
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <ul>
          {teams.map(({ name, country }) => (
            <li key={name}>
              {name} | {country}
            </li>
          ))}
        </ul>
        <ul>
          {parings.map(([a, b], index) => {
            return (
              <li key={index}>
                {a.name} - {b?.name}
              </li>
            );
          })}
        </ul>

        <button
          disabled={
            parings.reduce((acc, cur) => {
              return acc + cur.filter(Boolean).length;
            }, 0) === teams.length
          }
          onClick={drawOne}
        >
          Draw
        </button>
      </main>
    </div>
  );
};

export default Home;
